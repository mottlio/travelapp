
//LOGO
.logo{
    height: 3.5rem;
    margin-left: 2rem;
    margin-top: 2rem;
}

//SEARCH

.search{
    flex: 0 0 40%;

    //a flex item becomes a flex container - nested flexbox
    display: flex;
    align-items: center;
    justify-content: center;

    &__input{
        font-family: inherit;
        font-size: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        color: inherit;
        padding: .75rem 2rem;
        border-radius: 500px;
        width: 90%;
        transition: all 0.2s;
        margin-right: -3.5rem;


        &:focus{
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }
//when targeting the placeholder, you have to use the webkit
        &::-webkit-input-placeholder {
            font-weight: 100;
            color: --color-grey-light-4;
            font-size: inherit;
        }

    }

    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    }

    &__button{
        border: none;
        background-color: var(--color-grey-light-2);

        
        &:focus{
            outline: none;
        }

        &:active{
            transform: translateY(3px);
        }

    }

    &__icon{
        height: 2rem;
        width: 2rem;
//changing SVG COLOR:
        fill: var(--color-grey-dark-3);
    }
}

//USER NAVIGATION

.user-nav{
    display: flex;
    align-items: center;
    align-self: stretch;

&> * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;
    display: flex;
    align-items: center;
    

}

&>*:hover{
    background-color:  var(--color-grey-light-2);
}

    &__icon-box{
        position: relative;
    }
//how do we format an SVG icon?
    &__icon{
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
        
    }

    &__notification{
        font-size: .8rem; 
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: #fff;
        position: absolute;
        top: 1.5rem;
        left: 3rem;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user{

    }

    &__user-photo{
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }

    &__user-name{

    }

}

//SIDE NAVIGATION

.side-nav{
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    &__item {
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem;
        }
    }

    &__item::before{
        content:"";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0);
        // we could use transform-origin: bottom for it to grow from the bottom, we can set different attributes for different properties
        transition: transform .2s,
                    width .4s cubic-bezier(1,0,0,1) .2s,
                    background-color .3s;

    }
//memorize these bizarre selectors :/
    &__item:hover::before,
    &__item--active::before {
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before{
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited {
        color: var(--color-gray-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        //to justify the contents of this button
        display: flex;
        align-items: center;
        position: relative;
        z-index: 10;
    }


    &__icon{
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        fill: currentColor;
    }

    &__text{}


}
//LEGAL TEXT

.legal{

    font-size: 1.2rem;
    text-align: center;
    padding: 2.5rem;
    color: var(--color-grey-light-4);
}

//GALLERY

.gallery{
    display: flex;
    &__item{
        flex: 0 0 33.33333%;
        }

    &__item:hover &__caption{
        opacity: 1;
    }

    &__caption {
        color: #fff;
        background-color: rgba(0, 0, 0, 0.5);
        position: relative;
        z-index: 10;
        text-align: center;
        opacity: 0;
        transition: opacity .6s ease-in;
    }

    &__photo{
//in responsive design we always have to define image height in percentages so that the image size remains fluid
        width: 100%;
        margin-bottom: -1.7rem;
//images should always be displayed as blocks - to avoid weird spaces popping up
        display: block;
    }


}

//HOTEL OVERVIEW

.overview{
    display: flex;
    align-items: center;
    border-bottom: 1px solid var(--color-grey-light-2);
    

    &__heading{
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;

    }
    &__stars{
        //using flex:1 on stars moves all the rest to the right BUT the element is now very long - not optimal (for hover for example)
        //flex: 1;

        //margin auto in FLEX is much better - no problem with hover (check by giving a red bckgrd color)
        margin-right: auto;
        display: flex;

    }
    &__location{
        font-size: 1.2rem;
        display: flex;
        align-items: center;

    }

    &__icon-location{
        margin-right: 0.5rem;
    }
    &__rating{
        background-color: var(--color-primary);
        margin-left: 3rem;
        color: #fff;
        align-self: stretch;
        padding: 0 2.25rem;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
    }

    &__icon-star,
    &__icon-location{
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &__rating-average{
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px;
    }

    &__rating-count{
        font-size: .8rem;
        text-transform: uppercase;
    }

}

////////////////////
//BUTTONS

.btn-inline{
    border: none;
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: 1px solid currentColor;
    padding-bottom: 2px;
    display: inline-block;
    //so that the button can be used on different backgrounds
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    &:hover{
        color: var(--color-grey-dark-1);
    }

    &:focus{
        outline: none;
        animation: pulsate 1s infinite;

    }
}

@keyframes pulsate{
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50%{
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.5);
    }

    100%{
        transform: scale(1);
        box-shadow: none;
    }
}